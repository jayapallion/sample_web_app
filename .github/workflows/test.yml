name: CI
on: 
  workflow_dispatch:
    inputs:
      job-name:
        description: 'Job id'
        required: true
        type: choice
jobs:
  codecommit:
    name: codecommit
    if: ${{ github.event.inputs.job-name == 'codecommit' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
       
      - uses: actions/checkout@v3
        name: checkout this repo
        with:
          path: main
          ref: main
      
      - uses: actions/checkout@v3
      - name: checkout from codecommit
        shell: bash
        run: |
          git clone "https://${{ secrets.AWS_USERNAME }}:${{ secrets.AWS_PASSWORD }}@git-codecommit.ap-south-1.amazonaws.com/v1/repos/testing" testing
          
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           build-args: |
#             folder=testing
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testing
          IMAGE_TAG: 1.0.0
        run: |
          docker build --build-arg folder=testing -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
  billing:
    name: billing
    if: ${{ github.event.inputs.job-name == 'billing' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
       
      - uses: actions/checkout@v3
        name: checkout this repo
        with:
          path: main
          ref: main
      
      - uses: actions/checkout@v3
      - name: checkout from codecommit
        shell: bash
        run: |
          git clone "https://${{ secrets.AWS_USERNAME }}:${{ secrets.AWS_PASSWORD }}@git-codecommit.ap-south-1.amazonaws.com/v1/repos/billing" billing
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: billing
          IMAGE_TAG: 1.0.0
        run: |
          #cd ..
          docker build --build-arg folder=billing -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  
